@using Microsoft.AspNet.Identity
@model ListedIN.ViewModels.ProfileViewModel

@{

    using (Ajax.BeginForm("AddSec2", "Profile", new AjaxOptions()
    {
        Confirm = "Are you Sure ?",
        HttpMethod = "Post",
        UpdateTargetId = "edu-table",
        InsertionMode = InsertionMode.InsertAfter,
        OnSuccess = "$('.close').click();"

    }))
    {


        <div class="modal fade" id="myModal-AddSec2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">Edit</h4>
                    </div>
                    <div class="modal-body">

                        @{
                            string uId = Model.User.Id;
                           
                        }

                        @Html.HiddenFor(e => e.Education.fk_User, new { @Value = uId })  

                        <div>

                            @Html.LabelFor(e => e.Education.Name)
                            @Html.TextBoxFor(e => e.Education.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.Education.Name)

                            <div>
                                @Html.LabelFor(e => e.Education.Degree)
                                @Html.TextBoxFor(e => e.Education.Degree, new { @class = "form-control" })
                                @Html.ValidationMessageFor(e => e.Education.Degree)
                            </div>


                            <div>
                                @Html.LabelFor(e => e.Education.Field)
                                @Html.TextBoxFor(e => e.Education.Field, new { @class = "form-control" })
                                @Html.ValidationMessageFor(e => e.Education.Field)
                            </div>


                            <div>
                                @Html.LabelFor(e => e.Education.Grade)
                                @Html.TextBoxFor(e => e.Education.Grade, new { @class = "form-control" })
                                @Html.ValidationMessageFor(e => e.Education.Grade)
                            </div>
                            <div>
                                @Html.LabelFor(e => e.Education.FromYear)
                                @Html.TextBoxFor(e => e.Education.FromYear, new { @class = "form-control" })
                                @Html.ValidationMessageFor(e => e.Education.FromYear)
                            </div>

                            <div>
                                @Html.LabelFor(e => e.Education.ToYear)
                                @Html.TextBoxFor(e => e.Education.ToYear, new { @class = "form-control" })
                                @Html.ValidationMessageFor(e => e.Education.ToYear)
                            </div>

                            <div>
                                @Html.LabelFor(e => e.Education.Description)
                                @Html.TextBoxFor(e => e.Education.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(e => e.Education.Description)
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            @Html.AntiForgeryToken()
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>

                </div>
            </div>
        </div>

                            }
}


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

}
